# -*- coding: utf-8 -*-
"""
Created on Wed Oct 10 17:11:11 2018

@author: wn li
"""

from sklearn.ensemble import RandomForestClassifier
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.model_selection import GridSearchCV
from sklearn.metrics import accuracy_score
from sklearn.model_selection import cross_val_score
import matplotlib.pyplot as plt

df_wine=pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data',
                    header=None)
df_wine.columns = ['Class label', 'Alcohol',
                   'Malic acid', 'Ash',
                   'Alcalinity of ash', 'Magnesium',
                   'Total phenols', 'Flavanoids',
                   'Nonflavanoid phenols',
                   'Proanthocyanins',
                   'Color intensity', 'Hue',
                   'OD280/OD315 of diluted wines',
                   'Proline']

X,y=df_wine.iloc[:,1:].values,df_wine.iloc[:,0].values
X_train, X_test, y_train, y_test= train_test_split(X,y,test_size=0.1,random_state=0,stratify=y)

train_scores=[]
test_scores=[]
for i in np.arange(1,35,1):
    forest = RandomForestClassifier(criterion='gini',
                                    n_estimators=i,
                                    random_state=1,
                                    n_jobs=2)
    forest.fit(X_train, y_train)
    y_pred=forest.predict(X_test)
    train_scores.append(cross_val_score(forest,X_train,y_train,cv=10).mean())
    test_scores.append(accuracy_score(y_test,y_pred))
print(train_scores)
print(test_scores)

param_grid={'n_estimators':np.arange(10,35)}
forest=RandomForestClassifier(criterion='gini',random_state=1)
forest_cv=GridSearchCV(forest,param_grid,cv=10)
forest_cv.fit(X_train,y_train)
forest_cv.best_params_

forest = forest_cv.best_estimator_
forest.fit(X_train, y_train)

importances = pd.Series(data=forest.feature_importances_,
                        index= df_wine.columns[1:14])
importances_sorted = importances.sort_values()
print(importances_sorted)

importances_sorted.plot(kind='barh', color='lightblue')
plt.title('Features Importances')
plt.show()

print("My name is LI WENNING")
print("My NetID is: wenning5")
print("I hereby certify that I have read the University policy on Academic Integrity and that I am not in violation.")
